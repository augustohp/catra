#!/usr/bin/env node
// vim: et ts=4 sw=4 ft=javascript:

var environment = require('rc')
  , optmist = require('optimist')
  , stream = require('torrent-stream')
  , speaker = require('speaker')
  , lame = require('lame')
  , log = require('./src/Logger')
  , Controls = require('./src/Controls')
  , Player = require('player')
  , fs = require('fs')

process.title = 'catra-song-streamer'
cli = optmist.usage('Usage: $0 <magnet-link> \n\n' +
            'Whe playing: \n' +
            '\t SPACE      \t Pauses and unpauses the song. \n' +
            '\t Arrow keys \t Control volume and current track being played. \n' +
            '\t s          \t Starts playing \n ' +
            '\t x          \t Stops playing. \n' +
            '\t CTRL-C     \t Ends player.'
        ).demand(1)
        .string('l').alias('l', 'log').describe('l', 'File path where logs will be sent to.')
        .boolean('v').alias('v', 'verbose').describe('v', 'Outputs **a lot** of messages.')
        .boolean('q').alias('q', 'quiet').describe('q', 'Only output emergencies.');

argv = environment('catra', {}, cli.argv);
log.configureFromCli(cli.argv);

var format = function(files) {
    var songList = [];
    files.forEach(function(file) {
        if (false === file.name.endsWith('.mp3')) {
            log.debug('Escaping "%s" for it is not playable.', file.name);
            return;
        }

        log.debug('Reconized "%s" as playable file.', file.name);
        songList.push({'name': file.name, 'stream': file});
    });
    return songList;
};

var player = null;
torrentFile = argv._[0];
log.debug('Start fetching "%s"', torrentFile);
var torrent = stream(torrentFile);
torrent.on('ready', function() {
    log.debug('Metadata from torrent received, listing playable files.')

    player = new Player(format(torrent.files))
      .on('downloading', function(song) {
        log.debug('Downloading %s.', song.name);
        log.debug(song);
      })
      .on('playing', function(song) {
        log.notice('I am playing %s.', song.name);
      })
      .on('playend', function(song) {
        log.debug('Going to the next song...');
      })
      .on('error', function(err) {
        log.warning('Opps...! %s', err)
      })
      .play()

    Controls.attachPlayer(player)
});

