#!/usr/bin/env node
//vim: et ts=4 sw=4 ft=javascript:

var environment = require('rc');
var optmist = require('optimist');
var stream = require('torrent-stream');
var speaker = require('speaker');
var lame = require('lame');

process.title = 'catra-song-streamer'
cli = optmist.usage('Usage: $0 <magnet-link>')
        .demand(1);
argv = environment('catra', {}, cli.argv);

var filterMp3From = function(files) {
    var songList = [];
    files.forEach(function(file) {
        if (false === file.name.endsWith('.mp3')) {
            return;
        }

        songList.push(file);
    });
    return songList;
};
var describeFile = function(file) {
    console.log('   ' + file.name);
};

var readable = false
var speakerX = new speaker
var playNextSong = function(songList) {
    if (false !== readable) {
        // console.log(readable);
        stop(readable, speakerX)
        readable = false
        speakerX = new speaker
        return
    }

    song = songList.shift();
    console.log('Streaming song: ' + song.name);
    
    readable = song.createReadStream();
    readable
        .pipe(new lame.Decoder)
        .once('finish', function() {
            console.log('finish lame')
            playNextSong(songList);
        })
        .pipe(speakerX)
        .on('close', function() {
            if (songList.length == 0) {
                torrent.destroy();
                console.log('That was nice!');
                process.exit(0);
            } else {
                console.log('next...')
                playNextSong(songList);
            }
        })
        
}

var stop = function(readable, speaker) {
    if (!speaker)
      return
    readable
      .unpipe()
    speaker
      .end()

    return
}

torrentFile = argv._[0];
var torrent = stream(torrentFile);
torrent.on('ready', function() {
    console.log('Song list: ')
    songList = filterMp3From(torrent.files);
    songList.forEach(describeFile);
    playNextSong(songList);
});


var keypress = require('keypress');
// make `process.stdin` begin emitting "keypress" events 
keypress(process.stdin);
// listen for the "keypress" event 
process.stdin.on('keypress', function (ch, key) {
  // console.log('got "keypress"', key);
  if (key && key.ctrl && key.name == 'c') {
    process.exit(1)
  }
  if (key && key.name == 'right') {
    playNextSong(songList);
  }
});
 
process.stdin.setRawMode(true);
process.stdin.resume();

